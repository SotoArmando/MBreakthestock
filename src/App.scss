
@function core($base) {
  $result: 0.009658113525734344;
  @for $_ from 1 through $base {
	$result: $result * 1.1875;
  }
  @return $result;
}
@function core_font($base: 0) {
  $result: core(27 + $base);

  @return $result;
}

@function body_width($base: 1,$width : 100%) {
	@return $width / $base;
}

@function core_box($base: 0,$width : 100%) {
	@return core_font($base) * $width;
}

@mixin app($bodywidth, $proportion) {
	@for $i from 1 through 10 {
	  .o_#{$i} > * {
		flex-basis: 100% / $i;
	  }
	}
	
	.op_1 > * {
		flex-basis: calc(($bodywidth / 14rem) - ($bodywidth % 14rem));
	}
	.o_33 > * {
		flex-basis: calc(100% / 3);
	}
	
	@for $i from 1 through 9 {
	  .f#{$i * 100} {
		font-weight: $i * 100;
	  }
	}

    .ratio_0 {
		min-height: 14rem * core_font(2);
		background-color: rgb(230,230,230);
		position: relative;
		// transform: scale(1 - core(3));
		// background: url(../res/pic/pic2.jpg);
		background-size: cover !important;
		background-position: center;
		// margin: 0 (core(14) * 1rem);
	}

	.underline {
		text-decoration: underline;
	}
	@for $i from 1 through 50 {

		.iconsize_#{$i} {
			min-width: 1rem * core_font($i - 27) !important;
			max-width: 1rem * core_font($i - 27) !important;
			min-height: 1rem * core_font($i - 27) !important;
			mask-size: 1rem * core_font($i - 27) !important;
			background-size: 1rem * core_font($i - 27) !important;
		}
		.bidcorebox_#{$i} {
			min-height: 3.6rem * core($i + 23);
			min-width: 3.6rem * core($i + 23);
		}
		.corebox_#{$i} {
			min-height: 3.6rem * core($i + 23);
			width: 100%;
		}

	

		.basis_#{$i} {
			display: flex;
			flex-wrap: wrap;

			& > * {
				
				flex: 1 1 (1rem * core($i));
				flex-grow: 1;
			}
			
		}

		.corebox_x#{$i}:not(.box) {
			min-width: 3.6rem * core($i + 23);
		}	
		
		&.box.corebox_x#{$i} {
			width: 54pt;
			will-change: width;
			transition: width 200ms;

			&:active, &:focus {
				width: 3.6rem * core($i + 23);
			}

		
		}
		@media (orientation: portrait) {
			&.box.corebox_x#{$i} {
				width: 3.6rem * core($i + 23 - 5);
				&:active, &:focus {
					width: 3.6rem * core($i + 23 - 5);
				}
			}
			
		}


		.boxshadow_#{$i} {
			box-shadow: 4px 4px 1rem *  core($i)   #eeeeee;

			}
		.borderradius_#{$i} {
			border-radius: 1rem *  core($i);
		}

		.borderradius_top_#{$i} {
			border-top-left-radius: 1rem *  core($i);
			border-top-right-radius: 1rem *  core($i);
		}
	}

	@for $i from 0 through 50 {
	  .f_#{$i} {
		font-size: 1rem * core_font($i);
		@for $ii from 0 through 50 { 
			&.lh_#{$ii} {
				line-height: (1rem * core_font($i)) * core($ii + 27);
			}
			&.mobilelh_#{$ii} {
				line-height: (1rem * core_font($i)) * core($ii + 27) ;
			}
		}
		
	  }

	
	  .ls_#{$i} {
		letter-spacing: .025rem * core($i);
	  }
	  
	}
	@for $i from 1 through 50 {
	  .z_index#{$i} {
		z-index: $i;
	  }
	}
	.z_size_1 {
		transform: scaleX(1 - core(3));
	}
	@for $i from 1 through 50 {
		.pad_t#{$i}  {
			padding-top: 1rem * core_font($i - 27);
		}
		.pad_r#{$i}  {
			padding-right: 1rem * core_font($i - 27);
		}
		.pad_b#{$i}  {
			padding-bottom: 1rem * core_font($i - 27);
		}
		.pad_l#{$i}  {
			padding-left: 1rem * core_font($i - 27);
		}
		.pad_#{$i}  {
			padding: 1rem * core_font($i - 27);
		}
		
		.mar_t#{$i}  {
			margin-top: 1rem * core_font($i - 27);
		}
		.mar_r#{$i}  {
			margin-right: 1rem * core_font($i - 27);
		}
		.mar_b#{$i}  {
			margin-bottom: 1rem * core_font($i - 27);
		}
		.mar_l#{$i}  {
			margin-left: 1rem * core_font($i - 27);
		}
		.mar_#{$i}  {
			margin: 1rem * core_font($i - 27);
		}
	}

	@media (orientation: portrait),(max-width: 1000px)  {
	
		@for $i from 0 through 50 {
			.f_m_#{$i} {
				font-size: 1rem * core_font($i);

				
			  }
			.f_#{$i} {
				@for $ii from 0 through 50 { 
					&.mobilelh_#{$ii} {
						line-height: (1rem * core_font($i)) * core($ii + 27) ;
					}
				}
				
			  }
			
			.mobilecorebox_#{$i} {
				min-height: 3.6rem * core($i + 23);
				width: 100%;
			}
			.mobilecorebox_x#{$i} {
				min-width: 3.6rem * core($i + 23) ;
	
			}
			.mobilepad_t#{$i}  {
				padding-top: 1rem * core_font($i - 27);
			}
			.mobilepad_r#{$i}  {
				padding-right: 1rem * core_font($i - 27);
			}
			.mobilepad_#{$i}  {
				padding-bottom: 1rem * core_font($i - 27);
			}
			.mobilepad_l#{$i}  {
				padding-left: 1rem * core_font($i - 27);
			}
			.mobilepad_#{$i}  {
				padding: 1rem * core_font($i - 27);
			}
			
			.mobilemar_t#{$i}  {
				margin-top: 1rem * core_font($i - 27);
			}
			.mobilemar_r#{$i}  {
				margin-right: 1rem * core_font($i - 27);
			}
			.mobilemar_d#{$i}  {
				margin-bottom: 1rem * core_font($i - 27);
			}
			.mobilemar_l#{$i}  {
				margin-left: 1rem * core_font($i - 27);
			}
			.mobilemar_#{$i}  {
				margin: 1rem * core_font($i - 27);
			}
			.mob_#{100 / $i} > * {
				flex-basis: 100% / $i;
				flex-wrap: wrap;
			  }
		}
	
		
		.mob_100 {
			flex-basis: 100%;
			flex-wrap: wrap;
		}
		.ratio_0 {
			min-height: body_width(2,$bodywidth) * core_font(1);
			// transform: scale(1 - core(3));
   
		}
	}

	.sec_nav  {
		transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
		// transition: opacity 300ms;
		will-change: opacity;
		opacity: 0;
		cursor: pointer !important;
		
		&.active {
			opacity: 1;
		}
	}

	.row {
		display:flex;
		flex-direction: row;
		box-sizing: border-box;
	}

	.col {
		display:flex;
		flex-direction: column;
		box-sizing: border-box;
	}

	.center {
		display: flex;
		justify-content: center;
		align-items: center;

	}

	.start {
		display: flex;
		justify-content: flex-start;
	}

	.end {
		justify-content: flex-end;
	}

	.tend {
		text-align: right;
	}
	.items_start {
		align-items: flex-start;
	}

	.items_center {
		align-items: center;
	}

	.items_end {
		align-items: flex-end;
	}

	.space_evenly {
		justify-content: space-evenly;
	}

	.space_around {
		justify-content: space-around;
	}

	.space_between {
		justify-content: space-between;
	}

	.wrap {
		flex-wrap: wrap;
	}

	.tcenter  {
		text-align:center;
	}
	
	.tjust  {
		text-align:justify;
	}
	.bodywidth {
		width: body_width(1,$bodywidth);
	}
	body {
		width: body_width(1,$bodywidth);
		margin: auto;
		min-height: 100vh;
		font-family: 'Poppins';
		font-weight: 400;
	}
	
	input {
		font-family: 'Poppins';
		font-weight: 400;
		font-size: 1rem;
		appearance: none;
		background: transparent;
		border: 0;
		outline: 0;
		width: unset;
	}

	input:active,input:focus {
		border: 0;
		outline: 0;
	}

	input:active,input:focus {
		border: 0;
		outline: 0;
		
	}
	.nav {
		position: fixed;
		width: 100%;
		// width: body_width(1,$bodywidth);
		z-index: 15;
		left: 0;
	}

	html {
		// background: url(../res/patterns/pattern0.jpg);
		background: linear-gradient(0,#eafafa,rgb(252.45,252.45,252.45)) ;

	}

	a {
		text-decoration: none;
		cursor: pointer !important;
	} 
	.capitalize {
		text-transform:capitalize;
	}
	
	.relative {
		position: relative;
	}
	.absolute {
		position: absolute;
		left:0;
		top:0;
	}
	.allsize {
		height: 100%;
		width: 100%;
	}

	.allwidth {
		width: 100%;
	}
	.justify {
		text-align: justify !important;
	}
	$borders: ("0",rgb(230,230,230),1px),
	("1",rgb(190,190,190),1rem * core(15)),
	("2",rgb(69,208,156),1rem * core(15)),
	("3",rgb(242.25,242.25,242.25),1rem * core(15)),
	("4",rgb(229.5,229.5,229.5),1rem * core(17));

	$icons: ("back",url(./css/svg/arrow_back_ios-24px.svg)),
	("search", url('./css/svg/search-24px\ \(1\).svg')),
	("filter", url('./css/svg/filter_alt-24px.svg')),
	("twitter", url('./css/svg/013-twitter-1.svg')),
	("linkedin", url('./css/svg/031-linkedin.svg')),
	("github", url('./css/svg/039-github.svg')),
	("launch", url('./css/svg/launch-24px.svg')),
	("icon", url('./css/svg/icon.svg')),
	("icon", url('./css/svg/icon.svg'))
	;


	$back-colors: ("0",#F9F9F9),
	("1", #008000),
	("2", #FFFFFF),
	("3", rgba(56, 56, 56, .04)),
	("4",#FDE07B), ("5",#FFDC63),
	("6",#C4C4C4), ("7",#FEE580),
	("8",rgba(254, 229, 128, .14)),
	("mask_pink", #E490B7),
	("green",rgb(69,208,156)),
	("red",rgb(248,64,43)),
	("9",#f6fafd),
	("grad_9",linear-gradient(45deg, rgb(225,240,240),#eafafa )),
	("10",rgb(253, 253, 253)),
	("12", rgba(56, 56, 56, .94)),
	("13", rgba(208, 234, 255, 0.94)),
	("14", rgba(208, 197, 255, 0.94)),
	("15", rgb(252.45,252.45,252.45) ),
	("16",rgb(249.9,249.9,249.9)),

	;

	$fore-colors: ("0",#008000),
	("1", #008000),
	("2", #E490B7), 
	("4",rgba(56, 56, 56, .24)),
	("6",rgba(0,0,15,.34)), 
	("5",#383838), 
	("7",rgba(56, 56, 56, .94)),
	("8",#3838383d),
	("9",rgba(250, 250, 250, .94)),
	("10",rgb(233,244,245)),
	("green",rgb(69,208,156)),
	("red",rgb(248,64,43)),
	("12",rgb(229.5,229.5,229.5)),
	("13",rgb(204,204,204)),
	("11",rgb(47,47,47)),
	("12",rgb(229.5,229.5,229.5)),
	("13",rgb(204,204,204)),
	("14",rgb(191.25,191.25,191.25)),
	("15",rgb(191.25,191.25,191.25)),
	("16",rgb(76.5,76.5,76.5)),
	("17",rgb(102,102,102))
	;
	// $recipes-pick: ("a",url(../res/pic/recipes_pic/a.jpg)),("b",url(../res/pic/recipes_pic/b.jpg)),("c",url(../res/pic/recipes_pic/c.jpg)),
	// ("d",url(../res/pic/recipes_pic/d.jpg)),("e",url(../res/pic/recipes_pic/e.jpg)),("f",url(../res/pic/recipes_pic/f.jpg)),
	// ("g",url(../res/pic/recipes_pic/g.jpg)),("h",url(../res/pic/recipes_pic/h.jpg)),("i",url(../res/pic/recipes_pic/i.jpg)),
	// ("j",url(../res/pic/recipes_pic/j.jpg)),("k",url(../res/pic/recipes_pic/k.jpg)),("l",url(../res/pic/recipes_pic/l.jpg)),
	// ("m",url(../res/pic/recipes_pic/m.jpg)),("n",url(../res/pic/recipes_pic/n.jpg)),("o",url(../res/pic/recipes_pic/o.jpg)),
	// ("p",url(../res/pic/recipes_pic/p.jpg));
	$hover-msg: 
	("more","Combine 2 cups bread flour.\a\a Shape the dough into a ball. \a\a...\a\a 7 Steps \a Click for more details"),
	("more_1","Click for more details");
	$hover-msg-mobile: 
	("more","Tap again for more details")
	,("more_1","Click for more details");
	

	.before_1::before {
		position: absolute;
		content: "";
		height: 3.6rem * core(18 + 23);
		background: linear-gradient(45deg, rgb(225,240,240),#eafafa );
		width: 100%;
		left: 0;
		z-index: -1;
	}
	&.hover {
		position: relative;

			
		& .to_hover {
			position: absolute;
			left: 0;
			top: 0;
			width: 100%;
			height: 100%;
			opacity: 0;
			transition: opacity 357ms;
			transition-timing-function:cubic-bezier(0.075, 0.82, 0.165, 1);
		}

		&:hover > .to_hover {
			opacity: 1;

		 }
	}
	
	&.hover_b {
	

			
		& .to_hover_b {


			opacity: 0;
			transition: opacity 357ms;
			transition-timing-function:cubic-bezier(0.075, 0.82, 0.165, 1);
		}

		&:hover > .to_hover_b {
			opacity: 1;

		 }
	}

	@each $msg in $hover-msg {
		&.msg_#{nth($msg,1)} {
			&::after {
				font-size: 1rem;	
				content: nth($msg,2);
				width: calc(100% + 1px);
				height: calc(100% + 1px);
				position: absolute;
				background-color:rgba(250,250,250,.14);
				background-color:#FFDC63;
				opacity:0;
				text-align:center;
				justify-content:center;
				align-items: center;
				display: flex;
				will-change: opacity;
				transition: opacity 100ms;
				font-weight: 600;
				white-space: pre-wrap;
				color: #383838;
				box-sizing: border-box;
				padding: 0 1rem * core_font(1);
			
				
			}
			
			&:hover {
				&::after { 
					opacity: .86;
				}
				
			}
		}
	}
	
	@media (orientation: portrait), (max-width: 1000px)  {
		
		@each $msg in $hover-msg-mobile {
			&.msg_#{nth($msg,1)} {
				&::after {
					content: nth($msg,2);
					width: 100%;
					height: 100%;
					position: absolute;
					background-color:#FFDC63;
					opacity:0;
					text-align:center;
					justify-content:center;
					align-items: center;
					display: flex;
					will-change: opacity;
					transition: opacity 100ms;
					font-weight: 700;
					white-space: pre-wrap;
					color: #383838;
					box-sizing: border-box;
					padding: 0 1rem * core_font(1);
				}
				
				&:hover {
					&::after { 
						opacity: .86;
					}
					
				}
			}
		}
	}
	@each $icon in $icons {
		&.svgicon_#{nth($icon,1)} {
			background-image: nth($icon,2);
			min-width: 1rem * core_font(3);
			max-width: 1rem * core_font(3);
			min-height: 1rem * core_font(3);
			background-size: 1rem * core_font(3);
			background-repeat: no-repeat;
			background-position: center;
			cursor: pointer;
			display: inline-block;
		}
	}
	
	@each $icon in $icons {
		&.maskicon_#{nth($icon,1)} {
			mask-image: nth($icon,2);
			min-width: 1rem * core_font(3);
			max-width: 1rem * core_font(3);
			min-height: 1rem * core_font(3);
			mask-size: 1rem * core_font(3);
			background-color: #383838;
			mask-repeat: no-repeat;
			mask-position: center;
			cursor: pointer;
			display: inline-block;
		}
	}
	
	@each $color in $back-colors {
		&.back_#{nth($color,1)} {
		  background: nth($color,2);
		}

		// &.box.back_#{nth($color,1)} {
		
		// 	background: transparent;
		// 	will-change: background-color;
		// 	transition-timing-function: cubic-bezier(0.6, -0.28, 0.735, 0.045);
		// 	&:active, &:focus {
		// 		transition: width 200ms;
		// 		background-color: nth($color,2);
		// 	}
		// }
	}
	@each $border in $borders {
		&.border_t#{nth($border,1)} { 
			border-top: nth($border,3) solid nth($border,2);
		}

		&.border_b#{nth($border,1)} { 
			border-top: nth($border,3) solid nth($border,2);
		}
		
		&.border_#{nth($border,1)} {
			border: nth($border,3) solid nth($border,2);

			&:active {
				border: nth($border,3) solid nth($border,2);
			}
			&:focus {
				border: nth($border,3) solid nth($border,2);
				outline: none;
			}
		}
	}
	@each $color in $back-colors {
		input[type=checkbox]:checked.upback_#{nth($color,1)} {
			background-color: nth($color,2);
			transition: background-color 100ms, transform 100ms;
			animation-timing-function: cubic-bezier(.01,1.74,.79,1.65);
			
		}
	}

	@each $color in $fore-colors {
		&.fore_#{nth($color,1)} {
		  color: nth($color,2);
		}
	}
	
	// @each $pick in $recipes-pick {
	// 	&.recipes_pic_#{nth($pick,1)} {
	// 	  background: nth($pick,2);
	// 	}
	// }
	
	.animated_background_color {
		transition: background-color 100ms, transform 100ms;
		animation-timing-function: cubic-bezier(.01,1.74,.79,1.65);
		transform: scale(1);
	}
	
	input[type=checkbox] { 
		appearance: none;
		will-change: background-color;
		
	}

	.onactive_0 {
		will-change: transform, opacity;
		transform: translateY(-100%) ;
		opacity: 1;
		transition: transform 357ms cubic-bezier(0.175, 0.885, 0.32, 1.275);
		&.active {
			transform: translateY(0);
			opacity: 1;
		}
	}

	.btn:hover {
		cursor: pointer !important;
	}
	
}

@media (orientation: portrait), (max-width: 1000px) {
	@include app(100vw, 1);
	
	.mobilehide {
		display: none;
	}

	html {
		font-size: 1rem * core(24);
	}
	
	.box {
		transition: none !important;
	}
}


@media (orientation: landscape) and (min-width: 1000px) { 
	@include app(100vw  * 0.7091412742382274,0.7091412742382274);
	
	@media (-webkit-min-device-pixel-ratio: 1.125) {
		html {
			font-size: 0.7091412742382275rem;
		}
	}
	
	input[type=checkbox]:hover {
		border: 1px solid red;
		
	}
	


	

	// #doc:not([data-scroll='0']) {
	// 	transition: color 300ms;
	// 	background: red;
	// }

	// #doc[data-scroll="0"] {
	// 	transition: color 300ms;
	// 	background: blue !important;
	// }
}